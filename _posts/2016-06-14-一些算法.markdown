---
layout:     post
title:      "一些算法"
subtitle:   "算法"
date:       2016-06-14
author:     "樊晋龙"
header-img: "img/suanfa1.jpg"
tags:
    - dp
    - binary search
---

<h2>{{ page.title }}</h2>

每天啃几道算法题，大学没有重视起来的课程只好现在慢慢补上了~<br><br>
<h3>动态规划（dp）</h3>
来自leetcode309，关于买卖股票的问题。<br><br>
<h3>题目简述：</h3>
假设你有一个数组，第i个元素的值即为第i天的股票价格。设计一个算法找到最大收益，<br>
你可以用自己喜欢的方式设计交易（例如多次买入卖出一个股票），但有以下限制：<br>
你不能同时从事多个交易（例如你必须在买入另一只股票前先卖掉持有的股票）<br>
当你卖了一支股票后，你不能在第二天立即购买股票(有一天的冷却时间)<br>
例如： prices = [1,2,3,0,2]; maxProfit = 3; transactions=[buy, sell, cooldown, buy, sell];<br><br>
这是一道动态规划类型的算法题，看到题目后的思路是。从小问题分析，找出最优解，然后递推套用到
大问题上。具体到题目，应该先分析出每天的持股状态，然后计算出每天期望的最大获利，递推到所有日期。<br>
首先，初始化两个长度为指定天数的一维数组sell和buy。sell用于表示当天最终状态未持股，当天结束后的累计最大利润。<br>
buy表示当天最终状态是持股，当天结束的累计利润。第一天如果是持股状态，那么第一天买了股票，获利为-prices[0].第一天不持股，sell[0]为0.那么题目的答案即为sell数组的最后一个元素值。<br>
循环给定数组，第i天结束状态为不持股，那么第i天的最大获利分两种情况：1.和第i-1天状态一致不持股，那么获利为第i-1天不持股的获利。2.第i天本来持有，当天卖掉。那么获利为第i-1天为持股状态的获利加上prices[i].<br>
所以sell[i] = Math.max(sell[i - 1], buy[i - 1] + prices[i]).<br><br>
持股状态获利也相似，分两种情况：1.和前一天一样持股，那么获利为buy[i-1]。2.第i-2天卖掉，第i-1天为冷却时间，第i天再买入。那么获利为sell[i-2]-prices[i].<br>
所以buy[i] =  Math.max(buy[i - 1], sell[i - 2] - prices[i]).<br><br>
如果i<=2，那么buy[i]可能是第一天买入股票，第二天没动作。或者第一天没动作，第二天买入股票。最大获利为buy[i] = Math.max(buy[i-1],-prices[i])<br><br>
到这里就把两种状态都弄清楚了。求出sell数组，最后答案即为sell最后一个元素。<br><br>
<h3>完全二叉树（tree）</h3>
来自leetcode222，关于完全二叉树计算所有节点的问题<br><br>
<h3>题目简述：</h3>
给定一个完全二叉树，计算所有子节点个数。<br>
在完全二叉树的每一级，除了最底层，都是完全填充的。并且最后一层的子节点都尽可能在左边。在最后一层（第h层）有1到2h个不等的子节点。<br>
可以用二分查找减少时间复杂度。<br><br>
可以给完全二叉树编号，若根节点为1，那么下一层左节点为2，右节点为3.
即左节点为根节点*2,右节点为根节点*2+1.因此只要找到最后一个节点编号，即为节点个数。<br>
知道解法后，就递归计算每层节点的编号。如果左子树的高度等于右子树的高度，那么左子树为满二叉树。再从根节点的右节点出发，计算右子树的节点数。<br><br>
如果求高度时为0，说明没有子节点。就得到了最后一个节点的编号。<br><br>
上面的方法没有使用到二分查找，而是使用递归计算每个节点的编号。使用二分查找也很方便。<br>
高度为h的完全二叉树，h-1层及以上为满二叉树，节点个数为2^h-1。那么只要计算出第h层的个数，相加即可。<br>
使用二分查找计算第h层节点个数。先算出h，在找到第h层中间节点的高度是否等于h。若等于，则最后即节点在中间节点的右半部分，若不等，则在左半边。<br>
根节点的左节点之后一路向右，求得的最后一个节点即为第h层的中间节点。<br><br>
代码可以在我的github中查看。https://github.com/clowdrgn/LeetCodeDemo/ .坚持吧~









<p>{{ page.date | date_to_string }}</p>